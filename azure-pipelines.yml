# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master
variables:
  # Global Application Variables
  BUILD_NUM: '$(Build.BuildNumber)'
  MAVEN_CACHE_FOLDER: $(Pipeline.Workspace)/.m2/repository
  MAVEN_OPTS: '-Dmaven.repo.local=$(MAVEN_CACHE_FOLDER)'
stages:
- stage: Deploytotomcat
  jobs:
    - job: One
      pool:
        vmImage: 'ubuntu-latest'
      steps:
        - task: Cache@2
          inputs:
            key: '"funcs" | maven |"$(Agent.OS)" | **/pom.xml'
            restoreKeys: |
            path: $(MAVEN_CACHE_FOLDER)
          displayName: Cache Maven local repo
        - task: MavenAuthenticate@0
          displayName: Authenticate Maven to Artifacts feed
          inputs:
            artifactsFeeds: artifacts-maven
        - bash: |
            mvn install 
            mvn clean
            mvn clean install
            ls
            pwd
            echo deepak bajaj
            ls
            pwd
            echo deepak bajaj
        - publish: $(System.DefaultWorkingDirectory)
        - bash: |
             sudo sshpass -p "Bajaj@33" rsync -rvz -e 'ssh -o StrictHostKeyChecking=no -p 22' --progress  $(System.DefaultWorkingDirectory)* dbajaj@13.232.87.90:/home/ubuntu/tomcat
        - task: TomcatDeployment@1
          inputs:
           TomcatUrl: 'http://18.191.211.62:8888'
           Username: 'bajajd'
           Password: 'Bajaj'
           Warfile: '**/*war'
           Context: '/azure'
           ServerVersion: '7OrAbove'